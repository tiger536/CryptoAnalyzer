@{
    ViewData["Title"] = "Home Page";
}
@model IndexViewModel

@section Header {
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">CryptoAnalyzer</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-controller="Home" asp-action="Exceptions">Exceptions</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>
}

<div class="container-fluid">
    <div class="row">
        <div class="list-group col-sm">
            <div class="navbar-brand"><p class="secondary-heading">Spotlight</p></div>
            @foreach (var importantCoin in Model.Coins.Where(x => x.UnderSpotlight).OrderBy(x => x.Name).ToList())
            {
                <a href="~/Coins/@importantCoin.Code" class="list-group-item list-group-item-action d-inline-flex">
                    <span class="coinName">@importantCoin.Name</span>
                    <div class="cont">
                        @if (importantCoin.LastTalkedAbout != null)
                        {
                            <small class="small">@importantCoin.LastTalkedAbout.Value.LocalDateTime</small>
                        }
                        @if(importantCoin.Hits > 0)
                        {
                            <span class="badge badge-primary badge-pill">@importantCoin.Hits</span>
                        }
                    </div>
                </a>
            }
        </div>
        <div class="list-group col-sm">
            <div class="navbar-brand"><p class="secondary-heading">Newest Coin</p></div>
            @foreach (var newCoin in Model.Coins.Where(x => !x.UnderSpotlight && x.DateAdded >= DateTime.UtcNow.AddDays(Model.NewCoinThresold)).OrderByDescending(x => x.DateAdded).ToList())
            {
                <a href="~/Coins/@newCoin.Code" class="list-group-item list-group-item-action d-inline-flex">
                    <span class="coinName">@newCoin.Name</span>
                    <div class="cont">
                        <small class="small">@newCoin.DateAdded.LocalDateTime</small>
                        @if (newCoin.Hits > 0)
                        {
                            <span class="badge badge-primary badge-pill">@newCoin.Hits</span>
                        }
                    </div>
                </a>
            }
        </div>
        <div class="list-group col-sm">
            <div class="navbar-brand"><p class="secondary-heading">Last Talked About</p></div>
            @foreach (var interetTalkCoin in Model.InternetBuzzCoins.OrderByDescending(x => x.LastTalkedAbout).ToList())
            {
                <a href="~/Coins/@interetTalkCoin.Code" class="list-group-item list-group-item-action d-inline-flex">
                    <span class="coinName">@interetTalkCoin.Name</span>
                    <div class="cont">               
                        <small class="small">@interetTalkCoin.LastTalkedAbout.Value.LocalDateTime</small>
                        @if (interetTalkCoin.Hits > 0)
                        {
                            <span class="badge badge-primary badge-pill">@interetTalkCoin.Hits</span>
                        }
                    </div>
                </a>
            }
        </div>
    </div>
</div>